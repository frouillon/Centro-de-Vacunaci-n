/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menus;

import clases.PacienteVacunado;
import clases.Vacuna;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class menuVacunarPaciente extends javax.swing.JFrame {

    /**
     * Creates new form menuRegsitrarPaciente
     */
    public menuVacunarPaciente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTelefono = new javax.swing.JTextField();
        cboTipoDoc = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCodDoc = new javax.swing.JTextField();
        txtDomicilio = new javax.swing.JTextField();
        txtKit = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnRegistrar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtTelefono.setText("<Digite el telefono del paciente>");
        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });

        cboTipoDoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Seleccione una opcion>", "DNI", "Pasaporte", "Visa", "Carnet de extrangeria", "Otros" }));
        cboTipoDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTipoDocActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setText("Regsitrando paciente, porfavor rellene los espacios");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 255));
        jLabel2.setText("Nombres:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 255));
        jLabel3.setText("Telefono:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 255));
        jLabel4.setText("Tipo de documento:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 255));
        jLabel5.setText("Codigo del documento:");

        btnSalir.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        btnSalir.setText("Volver");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnRegistrar.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        txtNombre.setText("<Digeite el nombre del paciente>");
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 255));
        jLabel6.setText("Domicilio:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 255));
        jLabel7.setText("Vacuna suministrada:");

        txtCodDoc.setText("<Digeite el codigo del documento>");
        txtCodDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodDocActionPerformed(evt);
            }
        });

        txtDomicilio.setText("<Digeite el domicilio del paciente>");
        txtDomicilio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDomicilioActionPerformed(evt);
            }
        });

        txtKit.setText("<Digite el kit de la vacuna suministrada al paciente>");
        txtKit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKitActionPerformed(evt);
            }
        });

        txtApellido.setText("<Digite el apellido del paciente>");
        txtApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 255));
        jLabel8.setText("Apellidos:");

        btnRegistrar1.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        btnRegistrar1.setText("Ordenar por codigo");
        btnRegistrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(130, 130, 130)
                        .addComponent(txtNombre))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(49, 49, 49)
                        .addComponent(cboTipoDoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodDoc)
                            .addComponent(txtDomicilio)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(127, 127, 127)
                        .addComponent(txtApellido))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(132, 132, 132)
                        .addComponent(txtTelefono))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(btnRegistrar)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(txtKit))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 6, Short.MAX_VALUE)
                                .addComponent(btnRegistrar1)
                                .addGap(46, 46, 46)
                                .addComponent(btnSalir)
                                .addGap(42, 42, 42))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(cboTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCodDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtKit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrar)
                    .addComponent(btnSalir)
                    .addComponent(btnRegistrar1))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void cboTipoDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTipoDocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTipoDocActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        menuPrincipal menPrin = new menuPrincipal();
        menPrin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        PacienteVacunado paciente = new PacienteVacunado();
        Vacuna vacunaUsada=new Vacuna();
        int cont = 0;
        paciente.setNombre(txtNombre.getText());
        paciente.setApellido(txtApellido.getText());
        paciente.setTelefono(txtTelefono.getText());
        paciente.setTipoDoc((String) cboTipoDoc.getSelectedItem());
        paciente.setCodDoc(txtCodDoc.getText());
        paciente.setDomicilio(txtDomicilio.getText());
        File archivo = new File("archivo\\archivoPaciente.txt");

        int conti = 0;
        try {
            File archi = new File("archivo\\archivoVacuna.txt");
            if (archi.exists()) {
                FileReader lectura = new FileReader(archi);
                BufferedReader lector = new BufferedReader(lectura);
                String linea;
                while ((linea = lector.readLine()) != null) {
                    String conteo[] = linea.split("/");
                    Vacuna vacuna = new Vacuna(conteo[0], conteo[1], conteo[2], conteo[3]);
                    if (txtKit.getText() == null ? vacuna.kit == null : txtKit.getText().equals(vacuna.kit)) {
                        vacunaSuministrada vacunaSuministrada = new vacunaSuministrada(vacuna.kit, vacuna.lote, vacuna.marca, vacuna.efectoAdverso);
                        vacunaSuministrada.setVisible(true);
                        paciente.setVacunaSuministrada(vacuna);
                        conti++;
                        this.dispose();
                    }
                }
            } else {
                System.out.println("No hay archivo para leer");
            }
            if (conti == 0) {
                JOptionPane.showMessageDialog(null, "La vacuna buscada nunca a sido registrada");
            } else {
                if (!archivo.exists()) {
                    try {
                        PrintWriter salida = new PrintWriter(archivo);
                        salida.close();
                        cont++;
                    } catch (FileNotFoundException ex) {
                        ex.printStackTrace(System.out);
                    }
                }
                if (archivo.exists()) {
                    FileReader lectura = null;
                    try {
                        lectura = new FileReader(archivo);
                        BufferedReader lector = new BufferedReader(lectura);
                        int registrado = 0;
                        String linea;
                        if ("<Digeite el nombre del paciente>".equals(paciente.nombre)) {
                            JOptionPane.showMessageDialog(null, "Alguno de los espacion no ha sido llenado, profavor llenelos todos ");
                            registrado++;
                        }
                        if (registrado == 0) {
                            try {
                                while ((linea = lector.readLine()) != null) {
                                    String conteo[] = linea.split("/");
                                    PacienteVacunado lectorPaciente = new PacienteVacunado(conteo[0], conteo[1], conteo[2], conteo[3], conteo[4], conteo[5]);
                                    if (registrado == 0) {
                                        if ("<Digeite el apellido de la vacuna>".equals(paciente.apellido)) {
                                            JOptionPane.showMessageDialog(null, "Alguno de los espacion no ha sido llenado, profavor llenelos todos ");
                                            registrado++;
                                        }
                                    }
                                    if (registrado == 0) {
                                        if (paciente.tipoDoc == null ? lectorPaciente.tipoDoc == null : paciente.tipoDoc.equals("<Seleccione una opcion>")) {
                                            JOptionPane.showMessageDialog(null, "Alguno de los espacion no ha sido llenado, profavor llenelos todos ");
                                            registrado++;
                                        }
                                    }
                                    if (registrado == 0) {
                                        if ("<Digeite el telefono de la vacuna>".equals(paciente.telefono)) {
                                            JOptionPane.showMessageDialog(null, "Alguno de los espacion no ha sido llenado, profavor llenelos todos ");
                                            registrado++;
                                        }
                                    }
                                    if (registrado == 0) {
                                        if ("<Digeite el domicilio de la vacuna>".equals(paciente.domicilio)) {
                                            JOptionPane.showMessageDialog(null, "Alguno de los espacion no ha sido llenado, profavor llenelos todos ");
                                            registrado++;
                                        }
                                    }
                                }
                            } catch (IOException ex) {
                                Logger.getLogger(menuVacunarPaciente.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                        if (registrado == 0) {
                            try {
                                FileWriter escritor;
                                BufferedWriter escriba;
                                if (cont != 0) {
                                    escritor = new FileWriter(archivo, true);
                                    escriba = new BufferedWriter(escritor);
                                    escriba.newLine();
                                    escriba.write("\n"+paciente.nombre + "/" + paciente.apellido + "/" + paciente.telefono + "/" + paciente.tipoDoc + "/" + paciente.codDoc + "/" + paciente.domicilio + "/" + paciente.vacunaSuministrada.kit + "/" + paciente.vacunaSuministrada.lote + "/" + paciente.vacunaSuministrada.marca + "/" + paciente.vacunaSuministrada.efectoAdverso);
                                } else {
                                    escritor = new FileWriter(archivo, true);
                                    escriba = new BufferedWriter(escritor);
                                    escriba.write("\n"+paciente.nombre + "/" + paciente.apellido + "/" + paciente.telefono + "/" + paciente.tipoDoc + "/" + paciente.codDoc + "/" + paciente.domicilio + "/" + paciente.vacunaSuministrada.kit + "/" + paciente.vacunaSuministrada.lote + "/" + paciente.vacunaSuministrada.marca + "/" + paciente.vacunaSuministrada.efectoAdverso);
                                }
                                JOptionPane.showMessageDialog(null, "El paciente se ha registrado correctamente");
                                escriba.close();
                                escritor.close();
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, "No se ha podido regisrar correctamente");
                            }
                        }
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(menuVacunarPaciente.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtCodDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodDocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodDocActionPerformed

    private void txtDomicilioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDomicilioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDomicilioActionPerformed

    private void txtKitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKitActionPerformed

    private void txtApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoActionPerformed

    private void btnRegistrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrar1ActionPerformed
        // TODO add your handling code here:
        String archivoPath = "archivo\\archivoPaciente.txt";
        File archivo = new File(archivoPath);
        ArrayList<String> lineas = new ArrayList<>();

        try {
            FileReader fileReader = new FileReader(archivo);
            BufferedReader bufferedReader = new BufferedReader(fileReader);
            String linea;
            while ((linea = bufferedReader.readLine()) != null) {
                lineas.add(linea);
            }
            bufferedReader.close();

            Collections.sort(lineas);

            FileWriter fileWriter = new FileWriter(archivoPath);
            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
            bufferedWriter.write(lineas.get(0));
            for (int i = 1; i < lineas.size(); i++) {
                String lineaOrdenada = lineas.get(i);
                bufferedWriter.write("\n" + lineaOrdenada);
            }

            bufferedWriter.close();
            JOptionPane.showMessageDialog(null, "Los kits de vacunas se han ordenado alfabéticamente en el archivo.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al procesar el archivo: " + e.getMessage());
        }
    }//GEN-LAST:event_btnRegistrar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menuVacunarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menuVacunarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menuVacunarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menuVacunarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menuVacunarPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnRegistrar1;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cboTipoDoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCodDoc;
    private javax.swing.JTextField txtDomicilio;
    private javax.swing.JTextField txtKit;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}

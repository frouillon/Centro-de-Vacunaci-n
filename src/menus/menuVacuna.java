package menus;

import clases.Vacuna;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class menuVacuna extends javax.swing.JFrame {

    /**
     * Creates new form menuVacuna
     */
    public menuVacuna() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnRegistrarVacuna = new javax.swing.JButton();
        brnMostrarTodasVacunas = new javax.swing.JButton();
        btnMostrarVacunaEspecifica = new javax.swing.JButton();
        btnMostrarCantidadEfectosAdversos = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnOrenarKitAlfabeto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu vacuna");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setText("Bienvenido al menu de la vacuna, profavor elija una opcion:");

        btnRegistrarVacuna.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        btnRegistrarVacuna.setText("1. Registrar nueva vacuna");
        btnRegistrarVacuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarVacunaActionPerformed(evt);
            }
        });

        brnMostrarTodasVacunas.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        brnMostrarTodasVacunas.setText("2. Mostrar todas las vacunas registradas");
        brnMostrarTodasVacunas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brnMostrarTodasVacunasActionPerformed(evt);
            }
        });

        btnMostrarVacunaEspecifica.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        btnMostrarVacunaEspecifica.setText("3. Mostrar los datos de una vacuna especifica");
        btnMostrarVacunaEspecifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarVacunaEspecificaActionPerformed(evt);
            }
        });

        btnMostrarCantidadEfectosAdversos.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        btnMostrarCantidadEfectosAdversos.setText("4. Mostrar cantidad de efectos adversos");
        btnMostrarCantidadEfectosAdversos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarCantidadEfectosAdversosActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        btnSalir.setText("6. Volver");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnOrenarKitAlfabeto.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        btnOrenarKitAlfabeto.setText("5. Kit en orden alfabetico");
        btnOrenarKitAlfabeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrenarKitAlfabetoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOrenarKitAlfabeto, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRegistrarVacuna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(brnMostrarTodasVacunas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMostrarVacunaEspecifica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMostrarCantidadEfectosAdversos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(btnRegistrarVacuna)
                .addGap(18, 18, 18)
                .addComponent(brnMostrarTodasVacunas)
                .addGap(18, 18, 18)
                .addComponent(btnMostrarVacunaEspecifica)
                .addGap(18, 18, 18)
                .addComponent(btnMostrarCantidadEfectosAdversos)
                .addGap(18, 18, 18)
                .addComponent(btnOrenarKitAlfabeto)
                .addGap(18, 18, 18)
                .addComponent(btnSalir)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarVacunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarVacunaActionPerformed
        // TODO add your handling code here:
        menuRegistrarVacuna menRegVac = new menuRegistrarVacuna();
        menRegVac.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegistrarVacunaActionPerformed

    private void brnMostrarTodasVacunasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brnMostrarTodasVacunasActionPerformed
        // TODO add your handling code here:
        mostrarTodasVacunas mostrarTodas = new mostrarTodasVacunas();
        mostrarTodas.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_brnMostrarTodasVacunasActionPerformed

    private void btnMostrarVacunaEspecificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarVacunaEspecificaActionPerformed
        // TODO add your handling code here:
        vacunaEspecifica vacunaBuscada = new vacunaEspecifica();
        vacunaBuscada.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnMostrarVacunaEspecificaActionPerformed

    private void btnMostrarCantidadEfectosAdversosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarCantidadEfectosAdversosActionPerformed
        // TODO add your handling code here:
        int numerosSi = 0;
        int numerosNo = 0;
        try {
            File salida = new File("archivo\\archivoVacuna.txt");
            if (salida.exists()) {
                FileReader lectura = new FileReader(salida);
                BufferedReader lector = new BufferedReader(lectura);
                String linea;
                while ((linea = lector.readLine()) != null) {
                    String conteo[] = linea.split("/");
                    Vacuna vacuna = new Vacuna(conteo[0], conteo[1], conteo[2], conteo[3]);
                    if ("si".equals(vacuna.efectoAdverso)) {
                        numerosSi = numerosSi + 1;
                    } else {
                        numerosNo = numerosNo + 1;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se encontro el archivo vacuna");
            }
            JOptionPane.showMessageDialog(null, "\"Cantidad de efectos adversos: " + numerosSi + " de " + (numerosSi + numerosNo));
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnMostrarCantidadEfectosAdversosActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here
        menuPrincipal menPrin=new menuPrincipal();
        menPrin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnOrenarKitAlfabetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrenarKitAlfabetoActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String archivoPath = "archivo\\archivoVacuna.txt";
        File archivo = new File(archivoPath);
        ArrayList<String> lineas = new ArrayList<>();

        try {
            FileReader fileReader = new FileReader(archivo);
            BufferedReader bufferedReader = new BufferedReader(fileReader);
            String linea;
            while ((linea = bufferedReader.readLine()) != null) {
                lineas.add(linea);
            }
            bufferedReader.close();

            
            Collections.sort(lineas);

            
            FileWriter fileWriter = new FileWriter(archivoPath);
            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
            bufferedWriter.write(lineas.get(0));
            for (int i=1;i<lineas.size(); i++) {
                String lineaOrdenada=lineas.get(i);
                bufferedWriter.write("\n"+lineaOrdenada);
            }

            bufferedWriter.close();
            JOptionPane.showMessageDialog(null, "Los kits de vacunas se han ordenado alfabéticamente en el archivo.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al procesar el archivo: " + e.getMessage());
        }
    }//GEN-LAST:event_btnOrenarKitAlfabetoActionPerformed

/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menuVacuna.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menuVacuna.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menuVacuna.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menuVacuna.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menuVacuna().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brnMostrarTodasVacunas;
    private javax.swing.JButton btnMostrarCantidadEfectosAdversos;
    private javax.swing.JButton btnMostrarVacunaEspecifica;
    private javax.swing.JButton btnOrenarKitAlfabeto;
    private javax.swing.JButton btnRegistrarVacuna;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
